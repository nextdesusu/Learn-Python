#(define (make-from-real-imag x y)
#    (define (dispatch op)
#        (cond ((eq? op ’real-part) x)
#            ((eq? op ’imag-part) y)
#            ((eq? op ’magnitude)
#             (sqrt (+ (square x) (square y))))
#            ((eq? op ’angle) (atan y x))
#            (else
#                (error "Íåèçâåñòíàÿ îï. -- MAKE-FROM-REAL-IMAG" op))))
#dispatch)
#(define (make-from-mag-ang x y)
#    (define (dispatch op)
#        (cond ((eq? op ’real-part) cos(x))
#            ((eq? op ’imag-part) sin(y))
#            ((eq? op ’magnitude)
#             (car op))
#            ((eq? op ’angle) (cdr op))
#            (else
#                (error "Íåèçâåñòíàÿ îï. -- MAKE-FROM-REAL-IMAG" op))))
#dispatch)
#(define (make-from-mag-ang r a)
#  (define (dispatch op)
#    (cond ((eq? op 'real-part) (* r (cos a)))
#          ((eq? op 'imag-part) (* r (sin a)))
#          ((eq? op 'magnitude) r)
#          ((eq? op 'angle) a)
#          (else
#           (error "Íåèçâåñòíàÿ îï. -- MAKE-FROM-MAG-ANG" op))))
#  dispatch)
